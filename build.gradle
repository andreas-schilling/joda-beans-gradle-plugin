plugins {
    id 'eclipse'
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.7.2'
    id 'org.ysb33r.gradletest' version '2.0-rc.4'
    id 'com.gradle.plugin-publish' version '0.9.7' 
}

sourceCompatibility = 1.7

group = 'org.kiirun'
version = '1.1.0'

jar {
    manifest {
        attributes	'Implementation-Title': 'Joda-Beans Gradle Plugin',
                    'Implementation-Version': project.version,
                    'Implementation-Vendor': 'kiirun.org',
                    'Implementation-Vendor-Id': 'org.kiirun',
                    'Built-By': 'Andreas Schilling',
                    'Specification-Title': 'Joda-Beans Gradle Plugin',
                    'Specification-Vendor': 'kiirun.org',
                    'Built-With': "gradle-${project.getGradle().getGradleVersion()}"
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

task javadocJar (type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier "javadoc"
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

bintray {
    user = hasProperty('bintray.user') ? property('bintray.user') : ""
    key = hasProperty('bintray.key') ? property('bintray.key') : ""
    publications = ['mavenJava']
    dryRun = false
    pkg {
        repo = 'maven'
        name = project.group + ':' + project.name
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/andreas-schilling/joda-beans-gradle-plugin.git'
        issueTrackerUrl = 'https://github.com/andreas-schilling/joda-beans-gradle-plugin/issues'
        publicDownloadNumbers = true
        githubRepo = 'andreas-schilling/joda-beans-gradle-plugin'
        githubReleaseNotesFile = 'README.md'
        version {
            name = project.version
            desc = 'Joda-Beans Gradle Plugin'
            gpg {
                sign = true
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifacts = [jar, sourceJar, javadocJar]
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'Joda-Beans Gradle Plugin'
                    description 'Gradle plugin for Joda-Beans'
                    url 'https://github.com/andreas-schilling/joda-beans-gradle-plugin'
                    inceptionYear '2014'
                    issueManagement {
                        system 'GitHub'
                        url 'https://github.com/andreas-schilling/joda-beans-gradle-plugin/issues'
                    }
                    scm {
                        url 'https://github.com/andreas-schilling/joda-beans-gradle-plugin'
                        connection 'scm:git:https://github.com/andreas-schilling/joda-beans-gradle-plugin.git'
                        developerConnection 'scm:git:git@github.com:andreas-schilling/joda-beans-gradle-plugin.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'andreas-schilling'
                            name 'Andreas Schilling'
                            email 'andreas@kiirun.org'
                            roles {
                                role 'Project Lead'
                            }
                            timezone 1
                        }
                    }
                    contributors {
                        contributor {
                            name 'traggatt'
                            url 'https://github.com/traggatt'
                        }
                        contributor {
                            name 'Sebastian Davids'
                            url 'https://github.com/sdavids'
                        }
                    }
                    organization {
                        name 'kiirun.org'
                        url 'http://www.kiirun.org'
                    }
                }
            }
        }
    }
}

pluginBundle {
    website = 'https://github.com/andreas-schilling/joda-beans-gradle-plugin'
    vcsUrl = 'https://github.com/andreas-schilling/joda-beans-gradle-plugin.git'

    plugins {
        gradletestPlugin {
            id = 'org.kiirun.joda-beans'
            displayName = 'Plugin to run the Joda-Beans code generator'
            description = 'Runs the Joda-Beans code generator to allow processing your annotated beans within your Gradle build.'
            tags = ['bean', 'metamodel', 'properties', 'joda-beans']
        }
    }
}

def testDefinition(String testCase, String target, Map values) {
    def targetDir = new File(target)
    targetDir.mkdirs()

    return {
        from ("src/test/resources/${testCase}") {
            include '**/*.template'
            expand values
            rename '(.*)(\\.template)', '$1'
        }
        from("src/test/resources/${testCase}") {
            exclude '**/*.template'
        }
        into target
    }
}

task generateTestCases {
    doFirst {
        delete 'src/gradleTest'
    }
    doLast {
        def jodaVersions = ["1.8", "1.9", "1.9.1", "1.10", "1.10.1", "1.11", "1.12", "1.13", "1.14",
                            "2.0", "2.0.1", "2.0.2", "2.1", "2.2", "2.2.1", "2.2.2", "2.3", "2.4.0",
                            "2.5.0", "2.6.0", "2.6.1", "2.6.2", "2.7.0", "2.7.1"]
        for (jodaVersion in jodaVersions) {
            copy {
                with testDefinition('standard', 'src/gradleTest/plainGenerate'+jodaVersion, [javaplugin :'java',
                                                                     dependencyconfig: 'compile',
                                                                     jodabeansversion: jodaVersion])
            }
            copy {
                with testDefinition('standard', 'src/gradleTest/plainGenerateWithLibraryApi'+jodaVersion, [javaplugin: 'java-library',
                                                                                   dependencyconfig: 'api',
                                                                                   jodabeansversion: jodaVersion])
            }
            copy {
                with testDefinition('standard', 'src/gradleTest/plainGenerateWithLibraryImpl'+jodaVersion, [javaplugin: 'java-library',
                                                                                    dependencyconfig: 'implementation',
                                                                                    jodabeansversion: jodaVersion])
            }
        }

        def jodaVersionsWithoutGenerated = ["1.8", "1.9", "1.9.1", "1.10", "1.10.1", "1.11", "1.12", "1.13", "1.14",
                            "2.0", "2.0.1", "2.0.2", "2.1", "2.2", "2.2.1", "2.2.2", "2.3", "2.4.0",
                            "2.5.0", "2.6.0", "2.6.1", "2.6.2", "2.7.0", "2.7.1"]
        def jodaVersionsWithGenerated = ["2.7.1"]
        for (jodaVersion in jodaVersionsWithoutGenerated) {
            copy {
                with testDefinition('generated', 'src/gradleTest/generatedFlag'+jodaVersion, [javaplugin: 'java-library',
                                                                                              generatedShouldBeThere: 'false',
                                                                                              dependencyconfig: 'implementation',
                                                                                              jodabeansversion: jodaVersion])
            }
        }
        for (jodaVersion in jodaVersionsWithGenerated) {
            copy {
                with testDefinition('generated', 'src/gradleTest/generatedFlag'+jodaVersion, [javaplugin: 'java-library',
                                                                                              generatedShouldBeThere: 'true',
                                                                                              dependencyconfig: 'implementation',
                                                                                              jodabeansversion: jodaVersion])
            }
        }
    }
}
gradleTestGenerator.dependsOn generateTestCases

gradleTest {
    versions '4.1', '4.0.2', '4.0.1', '4.0'
    versions '3.5.1', '3.5', '3.4.1', '3.4'
}